% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variable_creation_functions.R
\name{draw_discrete}
\alias{draw_discrete}
\alias{draw_binary}
\title{Draw discrete variables including binary, binomial count, poisson count,
ordered, and categorical}
\usage{
draw_discrete(x, N = length(x), type = "binary", link = "identity",
  breaks = c(-Inf, 0, Inf), break_labels = FALSE, k = 1)

draw_binary(x, N = length(x), link = "identity")
}
\arguments{
\item{x}{vector representing either the latent variable used to draw the
count outcome (if link is "logit" or "probit") or the probability for the
count outcome (if link is "identity"). For cartegorical distributions x is
a matrix with as many columns as possible outcomes.}

\item{N}{number of units to draw. Defaults to the length of the vector
\code{x}}

\item{type}{type of discrete outcome to draw, one of 'binary'
(or 'bernoulli'), 'binomial', 'categorical', 'ordered' or 'count'}

\item{link}{link function between the latent variable and the probability of
a postiive outcome, i.e. "logit", "probit", or "identity". For the "identity"
link, the latent variable must be a probability.}

\item{breaks}{vector of breaks to cut an ordered latent outcome}

\item{break_labels}{vector of labels for the breaks for an ordered latent
outcome (must be the same length as breaks)}

\item{k}{the number of trials (zero or more)}
}
\description{
Drawing discrete data based on probabilities or latent traits is a common
task that can be cumbersome. \code{draw_binary} is an alias for
\code{draw_discrete(type = "binary")} that allows you to draw binary
outcomes more easily.
}
\examples{
fabricate(N = 3,
   p = c(0, .5, 1),
   binary = draw_discrete(p))

fabricate(N = 3,
   p = c(0, .5, 1),
   binary = draw_discrete(p, type = "bernoulli"))

fabricate(N = 3,
   x = 10*rnorm(N),
   binary = draw_discrete(x, type = "bernoulli", link = "probit"))

fabricate(N = 3,
   p = c(0, .5, 1),
   binomial = draw_discrete(p, type = "binomial", k = 10))

fabricate(N = 3,
   x = 5*rnorm(N),
   ordered = draw_discrete(x, type = "ordered",
   breaks = c(-Inf, -1, 1, Inf)))

fabricate(N = 3,
   x = c(0,5,100),
   count = draw_discrete(x, type = "count"))

# Categorical
fabricate(N = 6, p1 = runif(N), p2 = runif(N), p3 = runif(N),
         cat = draw_discrete(cbind(p1, p2, p3), type = "categorical"))
}
